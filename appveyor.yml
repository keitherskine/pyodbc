# This appveyor configuration file:
#   - builds pyodbc in multiple versions of Python
#   - tests the generated pyodbc module against various databases
#   - creates a distributable wheel file as an appveyor "artifact"
#     (which can be downloaded from the Appveyor UI)
#
# Various aspects of this file can be controlled by setting environment
# variables in the Appveyor UI (see the Settings tab -> Environment ->
# Environment variables).  You will need an Appveyor account for this, and
# to fork the pyodbc repo.  Here are the variables, "*" indicates the default
# value:
#   - APVYR_RUN_TESTS - run the unit tests at all (true*/false)
#   - APVYR_RUN_MSSQL_TESTS - run the MS SQL Server unit tests (true*/false)
#   - APVYR_RUN_POSTGRES_TESTS - run the PostgrSQL unit tests (true*/false)
#   - APVYR_RUN_MYSQL_TESTS - run the MySQL unit tests (true*/false)
#   - APVYR_GENERATE_WHEELS - generate a distributable wheel file (true/false*)
#
# For documentation about appveyor.yml files, see: https://www.appveyor.com/docs/appveyor-yml/


# version: '{branch} - #{build}'

image: Visual Studio 2015

# platform:
#   - x64

# cache:
#   - dist -> appveyor.yml
#   - apvyr_cache

# install:
#   - cmd: IF NOT EXIST apvyr_cache MKDIR apvyr_cache
#   - cmd: IF %APPVEYOR_JOB_NUMBER% EQU 1 IF EXISTS apvyr_cache\wheels.zip DEL apvyr_cache\wheels.zip

environment:

  global:
    # the following variables can be overridden as necessary through the Appveyor UI
    # (Settings tab -> Environment -> Environment variables)
    APVYR_RUN_TESTS: "true"
    APVYR_RUN_MSSQL_TESTS: "true"
    APVYR_RUN_POSTGRES_TESTS: "true"
    APVYR_RUN_MYSQL_TESTS: "true"
    APVYR_GENERATE_WHEELS: "false"
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # http://stackoverflow.com/a/13751649/163740
    # http://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros#microsoft-specific-predefined-macros
    WITH_COMPILER: "cmd /E:ON /V:ON /C .\\appveyor\\compile.cmd"
    # other variables
    MSSQL_INSTANCE: (local)\SQL2008R2SP2
    MSSQL_CONN: Driver={SQL Server Native Client 10.0};Server=%MSSQL_INSTANCE%;Database=test_db;UID=sa;PWD=Password12!;
    POSTGRES_CONN: Driver={PostgreSQL Unicode(x64)};Server=localhost;Port=5432;Database=postgres;Uid=postgres;Pwd=Password12!;
    MYSQL_CONN: Driver={MySQL ODBC 5.3 ANSI Driver};Charset=utf8mb4;Server=localhost;Port=3306;Database=mysql;Uid=root;Pwd=Password12!;

  matrix:

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      PYTHON: "C:\\Python27"
      TESTS_DIR: tests2
      # the Appveyor images do not have 32-bit ODBC drivers installed for Postgres/MySQL
      APVYR_RUN_POSTGRES_TESTS: "false"
      APVYR_RUN_MYSQL_TESTS: "false"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      PYTHON: "C:\\Python27-x64"
      TESTS_DIR: tests2

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python33"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python33-x64"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python34"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python34-x64"

    # Python 3.5 needs at least the VS2015 image

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python35"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python35-x64"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python36"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python36-x64"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python37"

    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    #   PYTHON: "C:\\Python37-x64"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python38"
      TESTS_DIR: tests3
      # the Appveyor images do not have 32-bit ODBC drivers installed for Postgres/MySQL
      APVYR_RUN_POSTGRES_TESTS: "false"
      APVYR_RUN_MYSQL_TESTS: "false"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      PYTHON: "C:\\Python38-x64"
      TESTS_DIR: tests3

services:
  - mssql2008r2sp2
  - postgresql96
  - mysql

build_script:
  - call .\appveyor\build_script.cmd

  # - "echo %APPVEYOR_BUILD_FOLDER% / %APPVEYOR_BUILD_WORKER_IMAGE%"
  # - "echo %APPVEYOR_JOB_NUMBER% / %APPVEYOR_JOB_ID% / %APPVEYOR_JOB_NAME%"
  # - "echo %APVYR_RUN_TESTS% / %APVYR_RUN_MSSQL_TESTS% / %APVYR_RUN_POSTGRES_TESTS% / %APVYR_RUN_MYSQL_TESTS%"
  # - "echo %APVYR_GENERATE_WHEELS%"
  # - "echo %PYTHON% / %TESTS_DIR%"
  # - "echo %MSSQL_INSTANCE% / %MSSQL_CONN%"
  # #- dir /B
  # - "%PYTHON%\\python -c \"import platform; print(platform.python_build(), platform.python_compiler())\""
  # - "%WITH_COMPILER% %PYTHON%\\python setup.py build"
  # - "%PYTHON%\\python setup.py install"
  # - "%PYTHON%\\python -c \"import pyodbc; print(pyodbc.version)\""
  # #- dir /B build

test_script:
  - call .\appveyor\test_script.cmd

  # - "sqlcmd -S \"(local)\\%MSSQL_INSTANCE%\" -U sa -P \"Password12!\" -Q \"SELECT @@VERSION\""
  # - "sqlcmd -S \"(local)\\%MSSQL_INSTANCE%\" -U sa -P \"Password12!\" -Q \"CREATE DATABASE test_db\""
  # - "\"%PYTHON%\\python\" \"%TESTS_DIR%\\sqlservertests.py\" \"%MSSQL_CONN%\""

  # - cmd: >-
  #   IF "%APVYR_RUN_TESTS%" == "true"
  #   (echo MS SQL Server tests
  #   && sqlcmd -S "%MSSQL_INSTANCE%" -U sa -P "Password12!" -Q "SELECT @@VERSION"
  #   && sqlcmd -S "%MSSQL_INSTANCE%" -U sa -P "Password12!" -Q "CREATE DATABASE test_db"
  #   && "%PYTHON%\\python" "%TESTS_DIR%\sqlservertests.py" "%MSSQL_CONN%")

after_test:
  - call .\appveyor\after_test.cmd

  # - IF NOT "%APVYR_GENERATE_WHEELS%" == "true" echo Generation of wheels has been skipped
  # - IF "%APVYR_GENERATE_WHEELS%" == "true" "%PYTHON%\\python" -m pip install --upgrade pip --no-warn-script-location
  # - IF "%APVYR_GENERATE_WHEELS%" == "true" "%PYTHON%\\python" -m pip install wheel --no-warn-script-location
  # - IF "%APVYR_GENERATE_WHEELS%" == "true" %WITH_COMPILER% "%PYTHON%\\python" setup.py bdist_wheel
  # - IF "%APVYR_GENERATE_WHEELS%" == "true" dir /B dist

  #    7z a apvyr_cache\wheels.zip %APPVEYOR_BUILD_FOLDER%\dist\*.whl -bsp0
  # - IF "%APVYR_GENERATE_WHEELS%" == "true" (
  #     "%PYTHON%\\python" -m pip install --upgrade pip --no-warn-script-location
  #     "%PYTHON%\\python" -m pip install wheel --no-warn-script-location
  #     "%WITH_COMPILER%" "%PYTHON%\\python" setup.py bdist_wheel
  #   )
  # - dir /B dist

artifacts:
  - path: 'dist\*.whl'
  # - path: 'dist\wheels.zip'
