# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
  ###  branches: [ master ]
  ###pull_request:
  ###  branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      ###fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    services:
      postgres:
        image: postgres:10.8
        # POSTGRES_HOST is postgres
        env:
          POSTGRES_DB: postgres_db
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: postgres_pwd
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    ###- name: Lint with flake8
    ###  run: |
    ###    # stop the build if there are Python syntax errors or undefined names
    ###    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    ###    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    ###    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    ###- name: Test with pytest
    ###  run: |
    ###    pytest
    - name: Install pyodbc
      run: |
        python setup.py install
        python -m pip freeze --all
        python -c "import pyodbc; print(pyodbc.version)"
    - name: Create test database in PostgreSQL
      run: |
        psql -c "SELECT version()"
        psql -l
        psql -c "CREATE DATABASE test WITH encoding='UTF8' LC_COLLATE='en_US.utf8' LC_CTYPE='en_US.utf8'"
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGDATABASE: postgres_db
        PGUSER: postgres_user
        PGPASSWORD: postgres_pwd
    - name: Run PostgreSQL tests
      run: |
        python "./tests3/pgtests.py" "DRIVER={PostgreSQL Unicode};SERVER=localhost;UID=postgres;DATABASE=test"
